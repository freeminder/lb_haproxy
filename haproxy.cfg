global
  log 127.0.0.1   local0
  log 127.0.0.1   local1 notice
  #log loghost    local0 info
  maxconn 80000
  #debug
  #quiet
  user haproxy
  group haproxy
  stats socket /tmp/haproxy.sock

defaults
  log             global
  mode            http
  option          httplog
  option          dontlognull
  retries         3
  option          redispatch
  maxconn        80000
  timeout client 60s             # Client and server timeout must match the longest
  timeout server 60s             # time we may wait for a response from the server.
  timeout queue  120s              # Don't queue requests too long if saturated.
  timeout connect 10s           # There's no reason to change this one.
  timeout http-request 30s  # A complete request may never take that long.
  # option          httpclose                                         # disable keepalive (HAProxy does not yet support the HTTP keep-alive mode)
  # option          abortonclose                                      # enable early dropping of aborted requests from pending queue
  option          http-keep-alive
  option          httpchk                                           # enable HTTP protocol to check on servers health
  stats auth admin:webenabled
  stats uri /haproxy?stats
        
# Set up application listeners here.
backend drupal_app_servers
  balance roundrobin
  option redispatch
  option forwardfor
  option httpchk GET /
  # server drupal01 pod1:80 weight 100 maxconn 84 check inter 10s
  # server drupal02 pod2:80 weight 100 maxconn 84 check inter 10s


# backend drupal_app_servers_ssl
#   mode tcp
#   balance roundrobin
#   option redispatch
#   option ssl-hello-chk
#   server drupal01 oldest-autoharp.deis.104.236.101.92.xip.io:443 weight 100 maxconn 84 check inter 10s
#   server drupal02 tender-anaconda.deis.104.236.101.92.xip.io:443 weight 100 maxconn 84 check inter 10s



frontend http-in
  bind :80
  acl rails_application_sliderapp_domain_sliderapp hdr_end(host) -i deis
  use_backend drupal_app_servers if rails_application_sliderapp_domain_sliderapp
  default_backend drupal_app_servers
  
# frontend https-in
#   mode tcp
#   bind :443
#   acl rails_applications_ssl hdr_end(host) -i sliderapp
#   use_backend drupal_app_servers_ssl if rails_applications_ssl
#   default_backend drupal_app_servers_ssl

